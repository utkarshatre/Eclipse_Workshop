package String;

import java.util.Stack;

public class StringLogic {
	public static void main(String[] args) {
		
//		char c1 = 'A';
//		int i=c1;
//		System.out.println(i);
//		
//		String s3 = "hii hello bbyee";
//		char a[]=s3.toCharArray();
//		String u[]=s3.split(" ");
//		
//		
//		reverse("abcdefgh");
//		reverseconcate("abcdefgh");
//		palidrome("abccba");
//		ceterreverse("12||AB@KL");
//		unique("hello hi byeee");
//		duplicate("hello hi byeee");
//		string2array("utkarsh atre");
//		char[] carr = {'a','t','r','e'};
//		String s = "utkarsh atre ji";
//		array2string(carr);
//		char []c = s.toCharArray();
//		System.out.println(c);
//		noOfChar("hello");
//		noOfWords("hello hi byeee");
//		noOfSpaces("hello hi byeee");
//		removeExtraSpaces("hello   hi   byeee");
//		mirrorwords("hello   hi   byeee");
//		wordsToArray("hello hi byeee");
//		balanced("((((()))()()()))"); //"()()()()" b"))))(((("unb "))()()()(("unb "((()))()()()))"unb
//		balancedByStack("((((()))()()()))");
//		
		
		 String s1="hello";
         int x=123;
         //Complete this line
         int space=15;
         int c=0;
         for(int j=0;j<space;j++) {
        	 System.out.println(space);
             if(s1.charAt(j)!=0&&s1.charAt(j)!=' '){
                 c++;
                 System.out.println(c);
             }
             
             s1=s1+' ';
         }
         System.out.println(space);
         space=space-c;
         System.out.println(space);
         s1=s1+x;
         System.out.println(s1);
		
		
		
		
	}
	public static void reverse(String s) {
		for(int i=s.length()-1; i>=0;i--) {
			System.out.print(s.charAt(i));

		}
		System.out.println(s.compareTo("abcdefgh"));

	}
	public static void reverseconcate(String s) {
		String si = "";
		for(int i =0;i<=s.length()-1;i++) {
			si=s.charAt(i)+si;
		}
		System.out.println(si);
	}
	public static void palidrome(String s) {
		String s1="";
		for(int i =0; i<s.length();i++) {
			s1=s.charAt(i)+s1;
		}
		if(s.equals(s1)) {
			System.out.println("palindrome");
		}
		else {
			System.out.println("not a palidrome");
		}
	}
	public static void ceterreverse(String s) {
		String s1="";

		for(int i =0; i<s.length();i++) {
			char c= s.charAt(i);
			if(c>='A'&&c<='Z') {
				s1=c+s1;
			}
		}
		System.out.println(s1);
		String s2="";
		int k =0;
		for(int i=0; i<=s.length()-1; i++) {
			char c = s.charAt(i);

			if(c>='A'&&c<='Z') {
				s2=s2+s1.charAt(k);
				k++;


			}
			else {
				s2=s2+c;	
			}
		}
		System.out.println(s2);    //12||AB@KL
	}
	public static void unique(String s) {
		String s1="";
		for(int i=0; i<s.length();i++) {
			char c= s.charAt(i);
			int count=0;
			for(int j =0; j<s.length();j++) {
				if(c==s.charAt(j)) {
					count++;
				}
			}
			if(count==1&&s.charAt(i)!=' ') {
				System.out.print(c);
			}
		}
		System.out.println();
	}
	public static void duplicate(String s) {
		for(int i =0; i<s.length();i++) {
			int count=0;
			for(int j=0; j<s.length();j++) {
				if(s.charAt(i)==s.charAt(j)) {
					count++;
				}
			}
			if(count>1) {
				System.out.print(s.charAt(i));
			}
		}
		System.out.println();
	}
	public static void string2array(String s) {
		char arr[]=new char[s.length()];
		for(int i =0; i<s.length();i++) {
			arr[i]=s.charAt(i);
			System.out.println(arr[i]);
		}
		System.out.println(arr);
	}
	public static void array2string(char arr[]) {
		String s = "";
		for(int i =0; i<arr.length;i++) {
			s=s+arr[i];
		}
		System.out.println(s);
	}
	public static void noOfChar(String s) {
		for(int i=0; i<s.length();i++) {
			int c=0;
			for(int j=0; j<s.length();j++) {
				if(s.charAt(i)==s.charAt(j)) {
					c++;
				}
			}

		}

	}
	public static void noOfWords(String s) {
		int c=0;
		for(int i=0; i<s.length(); i++) {
			if(s.charAt(i)==' ') {
				c++;
			}
		}
		System.out.println(c+1);
	}
	public static void noOfSpaces(String s) {
		int c=0;
		for(int i=0; i<s.length();i++) {
			if(s.charAt(i)==' ') {
				c++;
			}
		}
		System.out.println(c);
	}
	public static void removeExtraSpaces(String s) {
		String s1=s.charAt(0)+"";
		for(int i =1; i<s.length();i++) {
			if(s.charAt(i)!=' '&&s.charAt(i-1)==' ') {
				s1=s1+" "+s.charAt(i);
			}
			else if(s.charAt(i)!=' '){
				s1=s1+s.charAt(i);
			}
		}
		System.out.println(s1);
	}
	public static void mirrorwords(String s) {
		String s1=s.charAt(0)+"";
		for(int i=1;i<s.length();i++) {
			if(s.charAt(i)!=' '&& s.charAt(i-1)==' ') {
				s1=s.charAt(i)+" "+s1;
			}
			else if(s.charAt(i)!=' ') {
				s1=s.charAt(i)+s1;
			}
		}
		System.out.println(s1);

		//wordsInArray(s1);
	}
	public static void wordsToArray(String s) {
		String []arrs=s.split(" ");
		for(int i=0; i<arrs.length;i++) {
			System.out.println(arrs[i]);
		}

		int c=0;
		for(int i=0; i<s.length();i++) {
			c++;	
		}
		String arr[]=new String [c+1];
		String s2="";
		int k=0;
		for(int i =0; i<s.length();i++) {
			if(s.charAt(i)==' ') {
				arr[k]=s2;
				k++;
				s2="";
			}
			else {
				s2=s2+s.charAt(i);

			}
			arr[k]=s2;

		}
		System.out.println(arr[0]);
		System.out.println(arr[1]);
		System.out.println(arr[2]);

	}
	public static void balanced(String s) {
		int c=0;
		for(int i =0; i<s.length();i++) {
			if(s.charAt(i)=='(') {
				for(int j=i+1; j<s.length();j++) {
					if(s.charAt(j)==')') {
						c++;
						//char g='';
						//s.charAt(j)=g;
						break;
					}
				}
			}
			
		}
		if(c*2==s.length()) {
			System.out.println("balanced");
		}
		else {
			System.out.println("unbalanced");
		}
	}
	public static void balancedByStack(String s) {
		Stack <Character> stack=new Stack<Character>();
		for(int i =0; i<s.length();i++) {
			if(s.charAt(i)=='(') {
				stack.push(s.charAt(i));
			}
			else if(stack.empty()==false &&(s.charAt(i)==')'&&stack.peek()=='(')) {
				stack.pop();
			}
		}
		if(stack.empty()) {
			System.out.println("balanced");
		}
		else {
			System.out.println("unbalanced");
		}
	}
}


























